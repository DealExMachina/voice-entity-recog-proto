name: Deploy to Koyeb

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_ENV: production

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with demo mode
      run: npm test
      env:
        AI_PROVIDER: demo
        RATE_LIMIT_ENABLED: false

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Koyeb Staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        echo "üìã Repository: ${{ github.repository }}"
        echo "üåê Branch: ${{ github.ref_name }}"
        echo ""
        echo "üîê Environment Variables (staging):"
        echo "   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_STAGING && 'SET' || 'NOT SET' }}"
        echo "   MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY_STAGING && 'SET' || 'NOT SET' }}"
        echo "   AI_PROVIDER: ${{ vars.STAGING_AI_PROVIDER || 'demo' }}"
        echo "   RATE_LIMIT_ENABLED: ${{ vars.STAGING_RATE_LIMIT_ENABLED || 'true' }}"
        echo ""
        echo "‚úÖ Staging deployment configured!"
        echo "üéØ Next: Configure Koyeb staging service with these environment variables"

  deploy-production:
    needs: [test, deploy-staging]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Koyeb Production
      run: |
        echo "üöÄ Deploying to production environment..."
        echo "üìã Repository: ${{ github.repository }}"
        echo "üåê Branch: ${{ github.ref_name }}"
        echo ""
        echo "üîê Environment Variables (production):"
        echo "   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_PROD && 'SET' || 'NOT SET' }}"
        echo "   MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY_PROD && 'SET' || 'NOT SET' }}"
        echo "   AI_PROVIDER: ${{ vars.PROD_AI_PROVIDER || 'openai' }}"
        echo "   RATE_LIMIT_ENABLED: ${{ vars.PROD_RATE_LIMIT_ENABLED || 'true' }}"
        echo "   RATE_LIMIT_MAX_REQUESTS: ${{ vars.PROD_RATE_LIMIT_MAX_REQUESTS || '200' }}"
        echo ""
        echo "‚úÖ Production deployment configured!"
        echo "üéØ Next: Configure Koyeb production service with these environment variables"
    
    - name: Deployment Instructions
      run: |
        echo ""
        echo "üìö Complete the deployment using one of these methods:"
        echo ""
        echo "üéõÔ∏è  Method 1: Koyeb Dashboard (Recommended)"
        echo "   1. Go to https://app.koyeb.com"
        echo "   2. Connect GitHub repository: ${{ github.repository }}"
        echo "   3. Set environment variables from the list above"
        echo "   4. Deploy to fra (Frankfurt) region"
        echo ""
        echo "üíª Method 2: Koyeb CLI"
        echo "   koyeb service create mastra-voice-production \\"
        echo "     --git github.com/${{ github.repository }} \\"
        echo "     --git-branch ${{ github.ref_name }} \\"
        echo "     --env OPENAI_API_KEY=\$OPENAI_API_KEY \\"
        echo "     --env MISTRAL_API_KEY=\$MISTRAL_API_KEY \\"
        echo "     --env AI_PROVIDER=openai \\"
        echo "     --env NODE_ENV=production \\"
        echo "     --env RATE_LIMIT_ENABLED=true \\"
        echo "     --regions fra"
        echo ""
        echo "üîç Verify deployment with:"
        echo "   curl https://your-app.koyeb.app/api/health"
        echo "   curl https://your-app.koyeb.app/api/ai/status" 