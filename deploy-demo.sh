#!/bin/bash

# Quick Demo Deployment to Koyeb - No API Keys Required!
# This deploys the app in demo mode for showcase purposes

set -e

echo "üéØ Quick Demo Deployment to Koyeb (Demo Mode)"
echo "=============================================="

# Check if Koyeb CLI is available
if ! command -v koyeb &> /dev/null; then
    echo "‚ùå Koyeb CLI not found. Installing..."
    if [[ "$OSTYPE" == "darwin"* ]]; then
        if command -v brew &> /dev/null; then
            brew install koyeb/tap/koyeb
        else
            echo "Please install Homebrew first: https://brew.sh"
            echo "Or install Koyeb CLI manually: https://github.com/koyeb/koyeb-cli"
            exit 1
        fi
    else
        echo "Please install Koyeb CLI: https://github.com/koyeb/koyeb-cli"
        exit 1
    fi
fi

# Check for Koyeb token
if [ -z "$KOYEB_API_TOKEN" ] && [ -z "$KOYEB_TOKEN" ]; then
    echo "‚ö†Ô∏è  KOYEB_API_TOKEN or KOYEB_TOKEN not set."
    echo "üìã Get your token from: https://app.koyeb.com/account/api"
    echo "üí° Then run: export KOYEB_TOKEN=your_token_here"
    echo ""
    echo "üöÄ Alternative: Deploy via Koyeb Dashboard"
    echo "   1. Go to: https://app.koyeb.com"
    echo "   2. Connect GitHub: DealExMachina/voice-entity-recog-proto"
    echo "   3. Use these settings:"
    echo "      ‚Ä¢ Build command: npm ci && npm run build:production"
    echo "      ‚Ä¢ Run command: npm start"
    echo "      ‚Ä¢ Port: 3000"
    echo "      ‚Ä¢ Environment: AI_PROVIDER=demo"
    echo "      ‚Ä¢ Health check: /api/health"
    exit 1
fi

# Use whichever token is available
TOKEN="${KOYEB_TOKEN:-$KOYEB_API_TOKEN}"

# Get GitHub repository
GITHUB_REPO="DealExMachina/voice-entity-recog-proto"
APP_NAME="voice-entity-demo"

echo "üìã Repository: github.com/$GITHUB_REPO"
echo "üè∑Ô∏è  App Name: $APP_NAME"

# Login to Koyeb
echo "üîê Authenticating with Koyeb..."
echo $TOKEN | koyeb auth login --token

# Test authentication
if ! koyeb auth current-user > /dev/null 2>&1; then
    echo "‚ùå Authentication failed. Please check your token."
    exit 1
fi

# Create app if it doesn't exist
if ! koyeb apps list --output json | jq -e ".apps[] | select(.name == \"$APP_NAME\")" > /dev/null 2>&1; then
    echo "üÜï Creating Koyeb app: $APP_NAME"
    koyeb apps create $APP_NAME
else
    echo "üì± Using existing app: $APP_NAME"
fi

# Check if service exists and delete it for clean deployment
if koyeb services list --app $APP_NAME --output json | jq -e '.services[] | select(.name == "web")' > /dev/null 2>&1; then
    echo "üîÑ Removing existing service for clean deployment..."
    koyeb services delete web --app $APP_NAME || true
    echo "‚è≥ Waiting for service deletion..."
    sleep 10
fi

# Deploy in demo mode
echo "üöÄ Deploying demo service..."
koyeb services create web \
    --app $APP_NAME \
    --git github.com/$GITHUB_REPO \
    --git-branch main \
    --git-build-command "npm ci && npm run build:production" \
    --git-run-command "npm start" \
    --port 3000:http \
    --instance-type nano \
    --region fra \
    --env NODE_ENV=production \
    --env PORT=3000 \
    --env AI_PROVIDER=demo \
    --env DB_PATH=/tmp/entities.db \
    --env RATE_LIMIT_ENABLED=true \
    --health-checks "http(path=/api/health,port=3000)" \
    --scale 1

echo "‚è≥ Waiting for deployment..."
sleep 30

# Check deployment status
echo "üìä Checking deployment status..."
koyeb services get web --app $APP_NAME

# Get service URL
echo "üîç Getting service URL..."
SERVICE_URL=$(koyeb services get web --app $APP_NAME --output json | jq -r '.urls[0]' 2>/dev/null || echo "")

echo ""
echo "üéâ Demo Deployment Complete!"
echo "=============================================="
if [ -n "$SERVICE_URL" ] && [ "$SERVICE_URL" != "null" ]; then
    echo "üåê Your demo app is available at:"
    echo "   $SERVICE_URL"
    echo ""
    echo "üîç Test endpoints:"
    echo "   ‚Ä¢ Health: $SERVICE_URL/api/health"
    echo "   ‚Ä¢ Status: $SERVICE_URL/api/ai/status"
else
    echo "üåê Your demo app will be available shortly at:"
    echo "   https://$APP_NAME.koyeb.app"
fi
echo ""
echo "‚ú® Demo Features Available:"
echo "   ‚Ä¢ Voice entity extraction (demo mode)"
echo "   ‚Ä¢ Real-time web interface"
echo "   ‚Ä¢ Multi-provider switching UI"
echo "   ‚Ä¢ Rate limiting demonstration"
echo ""
echo "üîç Monitor deployment:"
echo "   ‚Ä¢ Dashboard: https://app.koyeb.com/apps/$APP_NAME"
echo "   ‚Ä¢ Logs: koyeb services logs web --app $APP_NAME"
echo ""
echo "üöÄ To enable AI providers later:"
echo "   ‚Ä¢ Add OPENAI_API_KEY environment variable"
echo "   ‚Ä¢ Add MISTRAL_API_KEY environment variable"
echo "   ‚Ä¢ Set AI_PROVIDER=openai or AI_PROVIDER=mistral" 